<html>
<head>
<title>IoT-mqtt data</title>
</head>
<script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.js" type="text/javascript"></script>
<script src="https://www.gstatic.com/charts/loader.js" type="text/javascript"></script>

<script>
// MQTT variables
var MQTTnames = ["Temperature","Humidity"];
var MQTTvalues = [0,0];


// Define the Google gauge chart
      google.charts.load('current', {'packages':['gauge']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {

        var data = google.visualization.arrayToDataTable([
          ['Label', 'Value'], 
      [MQTTnames[0], MQTTvalues[0]],
      [MQTTnames[1], MQTTvalues[1]],
            
        ]);

        var options = {
          min:-50,max:50,
          width: 800, height: 1000,
          redFrom: 90, redTo: 100,
          yellowFrom:75, yellowTo: 90,
          minorTicks: 5
        };

        var chart = new google.visualization.Gauge(document.getElementById('chart_div'));

        chart.draw(data, options);

        setInterval(function() {
      for (var i=0; i < MQTTnames.length; i++) {
      data.setValue(i, 1, MQTTvalues[i]);
      }
          chart.draw(data, options);

      }, 1000);
}

// Create a client instance
client = new Paho.MQTT.Client("pi",9001,"","client1");
client.onMessageArrived = onMessageArrived;

// connect the client
client.connect({onSuccess:onConnect});

// called when the client connects
function onMessageArrived(message) {
  
  for (var i=0; i < MQTTnames.length; i++) {
  if (message.destinationName == MQTTnames[i]) {
    MQTTvalues[i] = Number(message.payloadString);
  }
  }
}
function onConnect() {
  // Once a connection has been made, make a subscription and send a message.
  
  
  for (var i=0; i < MQTTnames.length; i++) {
  client.subscribe(MQTTnames[i]);
  }

}
// called when a message arrives
</script>






<script>
// Create a client instance
client2 = new Paho.MQTT.Client("pi",9001,"","client2");
client2.onMessageArrived = onMessageArrived;

// connect the client
client2.connect({onSuccess:onConnect});

// called when the client connects
function onMessageArrived(message) {
 // var encodedImage = message.payloadBytes;
  var blob = new Blob([message.payloadBytes], {type: 'image/png'});
  document.getElementById("latest_image").src = URL.createObjectURL(blob);
  
  }
  
function onConnect() {
  client2.subscribe("Image");
    
}
// called when a message arrives
</script>

<body>
  
  
  
  
<h1  style = 'font-size: xx-large'>Sensor data updates every 60 seconds</h1>
<div id="chart_div" style="width: 100%; height: 100%;"></div>

<h2 style="position:absolute; right:100; top:50px;">Latest image</h3>

<img id="latest_image" style="position:absolute; 
                              right:100; top:100px; width:700px; height:700px;
                              border-style:solid; border-color:black;
                              border-width:2px;" >

</body>
</html>
